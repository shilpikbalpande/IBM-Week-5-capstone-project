{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "                                        IBM Applied Data Science Capstone Course by Coursera\n                                                  Week 5  Report\n                                        Opening an Italian Restaurant in Chicago\n\n                                        1. Build a dataframe of neighborhoods in Chicago, USA by web scraping using beutifulSoup package. \n                                        2. Get the geographical coordinates of the localities in chicago using Geocode package\n                                        3. Fetch data for venues for all localities/neighbouhoods using Foursquare API\n                                        4. Explore and cluster the neighborhoods\n                                        5. Select the best cluster to open a new indian restaurant"
        },
        {
            "cell_type": "code",
            "execution_count": 36,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "     index                         Neighborhood\n0        0                          Albany Park\n1        1                      Altgeld Gardens\n2        2                        Andersonville\n3        3                       Archer Heights\n4        4                        Armour Square\n5        5                              Ashburn\n6        6                      Ashburn Estates\n7        7                       Auburn Gresham\n8        8                          Avalon Park\n9        9                             Avondale\n10      10                     Avondale Gardens\n11      11                    Back of the Yards\n12      12                      Belmont Central\n13      13                      Belmont Gardens\n14      14                      Belmont Heights\n15      15                      Belmont Terrace\n16      16                              Beverly\n17      17                         Beverly View\n18      18                        Beverly Woods\n19      19                             Big Oaks\n20      20                             Boystown\n21      21                          Bowmanville\n22      22                             Brainerd\n23      23                            Brickyard\n24      24                           Bridgeport\n25      25                        Brighton Park\n26      26                          Bronzeville\n27      27                             Bucktown\n28      28                        Budlong Woods\n29      29                           Buena Park\n30      30                             Burnside\n31      31                        Cabrini\u2013Green\n32      32                      Calumet Heights\n33      33                          Canaryville\n34      34                      Central Station\n35      35                              Chatham\n36      36                         Chicago Lawn\n37      37                            Chinatown\n38      38                     Chrysler Village\n39      39                       Clarendon Park\n40      40                        Clearing East\n41      41                        Clearing West\n42      42                Cottage Grove Heights\n43      43                               Cragin\n44      44                            Crestline\n45      45                       Dearborn Homes\n46      46                        Dearborn Park\n47      47                         Douglas Park\n48      48                              Dunning\n49      49                         East Beverly\n50      50                         East Chatham\n51      51                   East Garfield Park\n52      52                       East Hyde Park\n53      53                          East Pilsen\n54      54                            East Side\n55      55                         East Village\n56      56                           Eden Green\n57      57                            Edgebrook\n58      58                            Edgewater\n59      59                      Edgewater Beach\n60      60                       Edgewater Glen\n61      61                          Edison Park\n62      62                            Englewood\n63      63                             Fernwood\n64      64                           Fifth City\n65      65                            Ford City\n66      66                          Forest Glen\n67      67                          Fuller Park\n68      68                Fulton River District\n69      69                            Gage Park\n70      70                             Galewood\n71      71                              The Gap\n72      72                       Garfield Ridge\n73      73                       Gladstone Park\n74      74                           Gold Coast\n75      75                          Golden Gate\n76      76                         Goose Island\n77      77                       Graceland West\n78      78                      Grand Boulevard\n79      79                       Grand Crossing\n80      80               Greater Grand Crossing\n81      81                            Greektown\n82      82                              Gresham\n83      83                       Groveland Park\n84      84                        Hamilton Park\n85      85                          Hanson Park\n86      86                     Heart of Chicago\n87      87                            Hegewisch\n88      88                              Hermosa\n89      89                       Hollywood Park\n90      90                         Homan Square\n91      91                        Humboldt Park\n92      92                            Hyde Park\n93      93            Illinois Medical District\n94      94                          Irving Park\n95      95                         Irving Woods\n96      96                           The Island\n97      97                              Jackowo\n98      98               Jackson Park Highlands\n99      99                       Jefferson Park\n100    100                               K-Town\n101    101                          Kelvyn Park\n102    102                         Kennedy Park\n103    103                           Kensington\n104    104                              Kenwood\n105    105                        Kilbourn Park\n106    106                      Kosciuszko Park\n107    107                         Lake Meadows\n108    108                            Lake View\n109    109                       Lake View East\n110    110                  Lakewood / Balmoral\n111    111                      LeClaire Courts\n112    112  Legends South (Robert Taylor Homes)\n113    113                             Lilydale\n114    114                         Lincoln Park\n115    115                       Lincoln Square\n116    116                     Lithuanian Plaza\n117    117                         Little Italy\n118    118                       Little Village\n119    119                         Logan Square\n120    120                       Longwood Manor\n121    121                             The Loop\n122    122                      Lower West Side\n123    123                               Loyola\n124    124                     Magnificent Mile\n125    125                         Margate Park\n126    126                       Marquette Park\n127    127                      Marshall Square\n128    128                             Marynook\n129    129                              Mayfair\n130    130                        McKinley Park\n131    131                        Merchant Park\n132    132                            Montclare\n133    133                          Morgan Park\n134    134                      Mount Greenwood\n135    135                        Museum Campus\n136    136                         New Eastside\n137    137                      Near North Side\n138    138                       Near West Side\n139    139                        New Chinatown\n140    140                             New City\n141    141                         Noble Square\n142    142                         North Austin\n143    143                         North Center\n144    144                        North Halsted\n145    145                        North Kenwood\n146    146                       North Lawndale\n147    147                        North Mayfair\n148    148                           North Park\n149    149                              Nortown\n150    150                    Norwood Park East\n151    151                    Norwood Park West\n152    152                              Oakland\n153    153                               O'Hare\n154    154                        Old Edgebrook\n155    155                      Old Irving Park\n156    156                          Old Norwood\n157    157                             Old Town\n158    158                    Old Town Triangle\n159    159                          Oriole Park\n160    160                        Palmer Square\n161    161                           Park Manor\n162    162                            Park West\n163    163                             Parkview\n164    164                        Peterson Park\n165    165                            Pill Hill\n166    166                               Pilsen\n167    167                      Polish Downtown\n168    168                       Polish Village\n169    169                         Portage Park\n170    170     Prairie Avenue Historic District\n171    171                       Prairie Shores\n172    172                       Princeton Park\n173    173                        Printer's Row\n174    174                         Pulaski Park\n175    175                              Pullman\n176    176                       Ranch Triangle\n177    177                           Ravenswood\n178    178                   Ravenswood Gardens\n179    179                     Ravenswood Manor\n180    180                          River North\n181    181                           River West\n182    182                         River's Edge\n183    183                            Riverdale\n184    184                          Rogers Park\n185    185                       Roscoe Village\n186    186                             Rosehill\n187    187                             Roseland\n188    188                             Rosemoor\n189    189                          Saint Ben's\n190    190                            Sauganash\n191    191                 Schorsch Forest View\n192    192                     Schorsch Village\n193    193                           Scottsdale\n194    194                  Sheffield Neighbors\n195    195                        Sheridan Park\n196    196            Sheridan Station Corridor\n197    197                        Sleepy Hollow\n198    198                           Smith Park\n199    199                         South Austin\n200    200                        South Chicago\n201    201                        South Commons\n202    202                        South Deering\n203    203                South East Ravenswood\n204    204                      South Edgebrook\n205    205                       South Lawndale\n206    206                           South Loop\n207    207                          South Shore\n208    208                     Stateway Gardens\n209    209                    Stony Island Park\n210    210                        Streeterville\n211    211                      Talley's Corner\n212    212                           Tri-Taylor\n213    213                    Ukrainian Village\n214    214                          Union Ridge\n215    215                   University Village\n216    216                               Uptown\n217    217                            The Villa\n218    218                          Vittum Park\n219    219                            Wac\u0142awowo\n220    220                   Washington Heights\n221    221                      Washington Park\n222    222                    Wentworth Gardens\n223    223                         West Beverly\n224    224                         West Chatham\n225    225                    West Chesterfield\n226    226                          West DePaul\n227    227                          West Elsdon\n228    228                       West Englewood\n229    229                   West Garfield Park\n230    230                   West Humboldt Park\n231    231                        West Lakeview\n232    232                            West Lawn\n233    233                            West Loop\n234    234                     West Morgan Park\n235    235                         West Pullman\n236    236                           West Ridge\n237    237                     West Rogers Park\n238    238                            West Town\n239    239                        West Woodlawn\n240    240                          Wicker Park\n241    241                             Wildwood\n242    242                             Woodlawn\n243    243                           Wrightwood\n244    244                 Wrightwood Neighbors\n245    245                         Wrigleyville\n"
                }
            ],
            "source": "#!pip install geocoder\n#!pip install folium\nfrom bs4 import BeautifulSoup\nimport requests\nimport pandas as pd\nimport html5lib\nimport numpy as np\nimport geocoder as ge\nimport folium\nfrom geopy.geocoders import Nominatim # convert an address into latitude and longitude values\nfrom sklearn.cluster import KMeans\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\nimport os\nimport numpy as np\n\n## You can specify any catagory here to cluster on later based on the list of the categories from FourSquare API\nrestaurant_cuisine = r\"Italian Restaurant\"\n\n\npd.set_option('display.max_columns', 999)\npd.set_option('display.max_rows', 500)\npd.set_option('display.width', 1000)\n\nradius=500\nLIMIT=100\nCLIENT_ID = 'KOZW2334OOYPKS1RF2ZGSFZPRGCRF0WNEQNQPGCKRRZWRQBI' # your Foursquare ID, this has been masked\nCLIENT_SECRET = '4L1MG2ZHVPDHICNNVRAVJVEQQKIJRTRWBPSOG1GHYESE5CF4' # youyour Foursquare Secret, this has been masked\nVERSION = '20180605' # Foursquare API version\n\nchicago_localities = \"https://en.wikipedia.org/wiki/List_of_neighborhoods_in_Chicago\"\nr = requests.get(chicago_localities)\nsoup = BeautifulSoup(r.content,'html.parser')\ntable = soup.find('table')\nneighborhoodList = []\ndfs = pd.read_html(str(table))\n\n\ndf = pd.DataFrame(dfs[0]).drop(['Community area'],axis=1).reset_index()\n# df = df[:10]\nprint (df)"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "                                 1. create a function get_lat_and_lang to get co ordinates for all 246 neighborhoods \n                                 2. Draw chicago map using Folium package\n                                 3. get venues for all neighborhoods using FourSquare API\n                                 4. Store al the chicago venues in chicago_venues (around 6339 venues for all 246 localities)"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "The geograpical coordinate of Chicago, USA are 41.8755616, -87.6244212.\n"
                }
            ],
            "source": "\n# function to get coordinates\ndef get_lat_and_lng(neighborhood):\n    lat_lng = None\n    # loop until you get the coordinates\n    while(lat_lng is None):\n        g = ge.arcgis('{}, Chicago, USA'.format(neighborhood))\n        lat_lng = g.latlng\n    return lat_lng\n\nlat_and_land = [ get_lat_and_lng(neighborhood) for neighborhood in df[\"Neighborhood\"].tolist() ]\n\ndf_coordinates = pd.DataFrame(lat_and_land, columns=['Latitude', 'Longitude'])\ndf['Latitude'] = df_coordinates['Latitude']\ndf['Longitude'] = df_coordinates['Longitude']\n\n\naddress = 'Chicago, USA'\ngeolocator = Nominatim(user_agent=\"ny_explorer\")\nlocation = geolocator.geocode(address)\nlatitude = location.latitude\nlongitude = location.longitude\nprint('The geograpical coordinate of Chicago, USA are {}, {}.'.format(latitude, longitude))\n\nmap_chicago = folium.Map(location=[latitude, longitude], zoom_start=10)\n\nfor lat, lng, neighborhood in zip(df['Latitude'], df['Longitude'], df['Neighborhood']):\n    label = '{}'.format(neighborhood)\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        popup=label,\n        color='blue',\n        fill=True,\n        fill_color='#3186cc',\n        fill_opacity=0.7,\n        parse_html=False).add_to(map_chicago)\n\nfolium.ColorMap(map_chicago)\n\nmap_chicago.save('map_chicago.html')\n\ndef getNearbyVenues(names, latitudes, longitudes, radius=500):\n\n    venues_list=[]\n    for name, lat, lng in zip(names, latitudes, longitudes):\n        # print(name)\n\n        # create the API request URL\n        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n            CLIENT_ID,\n            CLIENT_SECRET,\n            VERSION,\n            lat,\n            lng,\n            radius,\n            LIMIT)\n\n        # make the GET request\n        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n\n        # return only relevant information for each nearby venue\n        venues_list.append([(\n                                name,\n                                lat,\n                                lng,\n                                v['venue']['name'],\n                                v['venue']['location']['lat'],\n                                v['venue']['location']['lng'],\n                                v['venue']['categories'][0]['name']) for v in results])\n\n    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n    nearby_venues.columns = ['Neighborhood',\n                             'Neighborhood Latitude',\n                             'Neighborhood Longitude',\n                             'Venue',\n                             'Venue Latitude',\n                             'Venue Longitude',\n                             'Venue Category']\n\n    return(nearby_venues)\n\nchicago_venues = getNearbyVenues(names = df['Neighborhood'],\n                                 latitudes = df['Latitude'],\n                                 longitudes =  df['Longitude']\n                                 )\nprint(chicago_venues.head())\n\n"
        },
        {
            "cell_type": "raw",
            "metadata": {},
            "source": "#                                                      1. get all venue cateogries for all localities \n                                                       2.Get of frequency of occurances of italian restaurants in each locality"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "\nchicago_restaurant_venues = chicago_venues[chicago_venues['Venue Category'].str.contains(\"Restaurant\")]\n\n## Count venues by each Neighborhood\nchicago_venues.groupby('Neighborhood').count()\n\nchicago_restaurant_venues.groupby('Neighborhood').count()\n\n##count unique categories\nprint('There are {} uniques categories.'.format(len(chicago_venues['Venue Category'].unique())))\n\n\n# one hot encoding\nchicago_onehot = pd.get_dummies(chicago_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n\n# add neighborhood column back to dataframe\nchicago_onehot['Neighborhood'] = chicago_venues['Neighborhood']\nchicago_grouped = chicago_onehot.groupby('Neighborhood').mean().reset_index()\nchicago_restaurant = chicago_grouped[[\"Neighborhood\",restaurant_cuisine]]\n\nprint(chicago_restaurant.head())\nprint(\"\\n\"+ \"##############################\" + \"\\n\" )\nprint(chicago_venues['Venue Category'].unique())"
        },
        {
            "cell_type": "raw",
            "metadata": {},
            "source": "                                              # 1.Create 3 clusters for all 246 localities \n                                                2.Distribute all venues into these culsters "
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "kclusters = 3\nchicago_clustering = chicago_grouped.drop('Neighborhood', 1)\n\n\n# run k-means clustering\nkmeans = KMeans(n_clusters=kclusters, random_state=0).fit(chicago_clustering)\n\n# check cluster labels generated for each row in the dataframe\nkmeans.labels_[0:10]\nchicago_merged = chicago_restaurant.copy()\nchicago_merged[\"Cluster Labels\"] = kmeans.labels_\n\n\n# merge chicago_merged with chicago to add latitude/longitude for each neighborhood\nchicago_merged = chicago_merged.join(df.set_index('Neighborhood'), on='Neighborhood')\nchicago_merged.head() # check the last columns!\nchicago_merged.sort_values([\"Cluster Labels\"], inplace=True)\n\n\n# create map\nmap_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n\n# set color scheme for the clusters\nx = np.arange(kclusters)\nys = [i + x + (i*x)**2 for i in range(kclusters)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, poi, cluster in zip(chicago_merged['Latitude'], chicago_merged['Longitude'], chicago_merged['Neighborhood'], chicago_merged['Cluster Labels']):\n    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=5,\n        popup=label,\n        color=rainbow[cluster-1],\n        fill=True,\n        fill_color=rainbow[cluster-1],\n        fill_opacity=0.7).add_to(map_clusters)\n\nmap_clusters\n\n## display clsuter number 1\nprint(chicago_merged.loc[chicago_merged['Cluster Labels'] == 0])\n\n\n"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "print(chicago_merged.loc[chicago_merged['Cluster Labels'] == 1])\n"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "print(chicago_merged.loc[chicago_merged['Cluster Labels'] == 2])\n"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": ""
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3.6",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.6.8"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 1
}